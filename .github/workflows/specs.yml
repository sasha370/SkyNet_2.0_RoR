name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to run specs on'
        required: true
        default: 'master'

env:
  RAILS_MASTER_KEY: ${{ secrets.RAILS_TEST_KEY }}
  RAILS_ENV: test

jobs:
  run_tests:
    name: Run Rspec
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports: [ "5432:5432" ]
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.branch || github.ref || 'master'}}
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2.1
          bundler-cache: true

      - name: Install dependencies
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Run Rubocop
        run: |
          bundle exec rubocop --parallel

      - name: install PostgreSQL client
        run: |
          sudo apt-get -yqq install libpq-dev

      - name: Setup test database
        run: |
          bundler exec rails db:create db:migrate RAILS_ENV=test

      - name: Run tests
        run: bundle exec rspec spec --format documentation
        env:
          RUBYOPT: -W:no-deprecated -W:no-experimental

      - name: Upload coverage results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: coverage-report
          path: coverage

